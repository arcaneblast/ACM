#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <map>
#include <queue>
#include <climits>
#include <utility>
#include <functional>
#include <cmath>
#define INF 1L<<60
using namespace std;
long long res[55][55];
long long edge[55][55];
long long adj[55][55];

int main()
{
    int cases;
    cin >> cases;
    while (cases--)
    {
        int n;
        cin >> n;
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
            {
                cin >> adj[i][j];
                if(adj[i][j]==-1)
                    adj[i][j]=INF;
                edge[i][j]=adj[i][j];
                res[i][j] = 0;
            }
        for (int k = 0; k < n; k++)
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++)
                {
                    if (i == j)
                        adj[i][j] = 0;
                    else
                        adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);
                }
        //res calc
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if(edge[i][j]!=INF){
                    for (int v1 = 0; v1 < n; v1++)
                    {
                        for (int v2 = 0; v2 < n; v2++)
                        {
                            if (adj[v1][i]+edge[i][j]+adj[j][v2]==adj[v1][v2])
                            {
                                res[i][j]++;
                            }
                        }
                    }
                }
                else
                {
                    res[i][j]=-1;
                }
           }
        }
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n - 1; j++)
            {
                cout << res[i][j] << " ";
            }
            cout << res[i][n - 1] << endl;
        }
    }
}
